package XML;

import Connection.ConnectionFactory;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

public class Termo_Jasper {

    private Connection conexao;

    public Termo_Jasper() {
        this.conexao = ConnectionFactory.getConexao();
    }

    public void gerar(String layout, String cliente) throws JRException, SQLException, ClassNotFoundException {
        //gerando o jasper design

        JasperDesign desenho = JRXmlLoader.load(layout);

        //compila o relatório

        JasperReport relatorio = JasperCompileManager.compileReport(desenho);

        //estabelece conexão

        String query = "select cli_nome, cli_datanasc, cli_cpf, cli_rg, cli_rua || ' ' || cli_numero || ', ' || cli_bairro || ' - ' || cli_cidade as ENDERECO from cliente where cli_codigo = '" + cliente + "'";
        String query2 = "select cli_nome, to_char(cli_datanasc,'dd/mm/yyyy'), cli_cpf, cli_rg, cli_rua || ' ' || cli_numero || ', ' || cli_bairro || ' - ' || cli_cidade as ENDERECO from cliente where cli_codigo = '" + cliente + "'";
        java.sql.PreparedStatement stmt = this.conexao.prepareStatement(query2);

        ResultSet rs = stmt.executeQuery();

        //implementação da interface JRDataSource para DataSource ResultSet
        JRResultSetDataSource jrRS = new JRResultSetDataSource(rs);

        //executa o relatório
        HashMap parametros = new HashMap();


        parametros.put("mostruario", new Double(10));
        JasperPrint impressao = JasperFillManager.fillReport(relatorio, parametros, jrRS);
        //JasperPrintManager.printPage(impressao, 0, true);

        //exibe o resultado

        JasperExportManager.exportReportToPdfFile(impressao, "C:/inked/Termo-" + cliente + ".pdf");

<<<<<<< .mine
        JasperViewer viewer = new JasperViewer(impressao, true);
        viewer.show();
=======
        JasperViewer viewer = new JasperViewer(impressao, false);
        viewer.show();
>>>>>>> .r49
    }
}
